Create projects
dotnet new webapi -n catalog
dotnet dev-certs https --trust

Package:
dotnet add package Mongo.Driver
dotnet add package AspNetCore.HealthChecks.MongoDb
dotnet add package Logging.Abstractions
dotnet add package moq
dotnet add package FluentAssertions

Commands:
docker run -d --rm --name mongo -p 27017:27017 -v mongodbdata:/data/db mongo
docker stop mongo
docker volume ls
docker volume rm mongodbdata
docker run -d --rm --name mongo -p 27017:27017 -v mongodbdata:/data/db -e MONGO_INITDB_ROOT_USERNAME=mongoadmin -e MONGO_INITDB_ROOT_PASSWORD=Pass#word1 mongo

docker build -t catalog:v1 .
docker network create net5tutorial
docker network ls

docker run -d --rm --name mongo -p 27017:27017 -v mongodbdata:/data/db -e MONGO_INITDB_ROOT_USERNAME=mongoadmin -e MONGO_INITDB_ROOT_PASSWORD=Pass#word1 --network=net5tutorial mongo
docker run -it --rm -p 8080:80 -e MongoDbSettings:Host=mongo -e MongoDbSettings:Password=Pass#word1 --network=net5tutorial catalogsi:dev

.NET Secrets Managee
dotnet user-secrets init
dotnet user-secrets set MongoDbSettings:Password Pass#word1


Kubernetes:
kubectl config current-context
kubectl create secret generic catalog-secrets --from-literal=mongodb-password='Pass#word1'
kubectl appply -f .\catalog.yaml
kubectl get deployments
kubectl get pods
kubectl logs [name of the pod]